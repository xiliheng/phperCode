<?php
/**
 * Created by PhpStorm.
 * User: lee
 * Date: 17/12/9
 * Time: 下午11:23
 */
include "../../lib/crawler/StockInfo.php";
include "../../lib/LoadKline.php";
include "../../lib/Calculate.php";

Class pressHold
{

    public static $rise = 1;
    public static $fall = 2;
    public static $shake = 3;


    public static function getLine()
    {
        $nowRedis = StockInfo::getNowRedis();
        $stock = "sh600036";
        $klineArr = LoadKline::getStockKline($stock,$nowRedis,60);
        $trend = self::getTrend($klineArr);

        if($trend == self::$shake)
        {
            $result = self::shakePH($klineArr);
        }
        if($trend == self::$fall)
        {
            $result = self::frPH($klineArr,self::$fall);
        }
        if($trend == self::$rise)
        {
            $result = self::frPH($klineArr,self::$rise);
        }
        return $result;
    }

    public static function getTrend($arr)
    {
        if(empty($arr))
        {
            return false;
        }
        reset($arr);
        $first = current($arr);
        $end = end($arr);

        $startClose = $first['close'];
        $endClose = $end['close'];

        /*
        $high = 0;
        $low = 0;
        foreach($arr as $k=>$v)
        {
            if($v['high'] > $high)
            {
                $high = $v['high'];
            }
            if($low == 0 || $v['low'] < $low)
            {
                $low = $v['low'];
            }
        }
        */

        $trendValue = round(($endClose - $startClose)/$startClose,3);

        //上涨 1 下跌 2 震荡 3
        if($trendValue > 0.15)
        {
            return self::$rise;
        }

        if($trendValue < -0.15)
        {
            return self::$fall;
        }

        return self::$shake;
    }

    public static function shakePH($klineArr)
    {
        $maArr = Calculate::countMa($klineArr,3);
        if(!empty($maArr))
        {
            return [max($maArr),min($maArr)];
        }
        return false;
    }

    public static function frPH($klineArr, $type)
    {
        $pArr = self::getKeyPoint($klineArr, $type);
        $result = [];
        if(!empty($pArr))
        {

        }
        return $result;
    }

    public static function getKeyPoint($klineArr, $type)
    {
        $result = [];
        $num = count($klineArr);
        if($num>=5)
        {
            $i = 0;
            $l2 = $l1 = $r2 = $r1 = 0;
            while($i<$num)
            {
                if($type == self::$fall)
                {
                    $now = $klineArr[$i]['high'];
                    if($i >= 2)
                    {
                        $l2 = $klineArr[$i-2]['high'];
                        $l1 = $klineArr[$i-1]['high'];
                    }
                    if($i <= ($num-3))
                    {
                        $r2 = $klineArr[$i+2]['high'];
                        $r1 = $klineArr[$i+1]['high'];
                    }
                    $flag1 = $flag2 = $flag3 = $flag4 = false;
                    if($l2 == 0 || ($l2!=0 && $l1>$l2))
                    {
                        $flag1 = true;
                    }
                    if($l1 == 0 || ($l1!=0 && $now>$l1))
                    {
                        $flag2 = true;
                    }
                    if($r1 == 0 || ($r1!=0 && $now>$r1))
                    {
                        $flag3 = true;
                    }
                    if($r2 == 0 || ($r2!=0 && $r1>$r2))
                    {
                        $flag4 = true;
                    }
                    if($flag1 && $flag2 && $flag3 && $flag4)
                    {
                        $date = date('Ymd',strtotime($klineArr[$i]['time']));
                        $result[$date] = $now;
                        $i = $i + 5;
                        continue;
                    }
                }
                else if($type == self::$rise)
                {
                    $now = $klineArr[$i]['low'];
                    if($i >= 2)
                    {
                        $l2 = $klineArr[$i-2]['low'];
                        $l1 = $klineArr[$i-1]['low'];
                    }
                    if($i <= ($num-3))
                    {
                        $r2 = $klineArr[$i+2]['low'];
                        $r1 = $klineArr[$i+1]['low'];
                    }
                    $flag1 = $flag2 = $flag3 = $flag4 = false;
                    if($l2 == 0 || ($l2!=0 && $l1<$l2))
                    {
                        $flag1 = true;
                    }
                    if($l1 == 0 || ($l1!=0 && $now<$l1))
                    {
                        $flag2 = true;
                    }
                    if($r1 == 0 || ($r1!=0 && $now<$r1))
                    {
                        $flag3 = true;
                    }
                    if($r2 == 0 || ($r2!=0 && $r1<$r2))
                    {
                        $flag4 = true;
                    }
                    if($flag1 && $flag2 && $flag3 && $flag4)
                    {
                        $date = date('Ymd',strtotime($klineArr[$i]['time']));
                        $result[$date] = $now;
                        $i = $i + 5;
                        continue;
                    }
                }
                $i++;
            }
        }
        else
        {
            if($type == self::$fall)
            {
                $value = 0;
                $date = 0;
                foreach($klineArr as $k=>$v)
                {
                    if($v['high'] > $value)
                    {
                        $value = $v['high'];
                        $date = date('Ymd',strtotime($v['time']));
                    }
                }
                $result[$date] = $value;
            }
            else if($type == self::$rise)
            {
                $value = 0;
                $date = 0;
                foreach($klineArr as $k=>$v)
                {
                    if($v['low'] < $value || $value == 0)
                    {
                        $value = $v['low'];
                        $date = date('Ymd',strtotime($v['time']));
                    }
                }
                $result[$date] = $value;
            }
        }
        return $result;
    }
}